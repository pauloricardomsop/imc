name: Release Checker

on:
  push:
    branches:
      - main

jobs:
  release_checker:
    env:
      ADMOB: ${{ secrets.ADMOB }}
      BUNDLE: ${{ secrets.BUNDLE }}
      FACEBOOK_APP_ID: ${{ secrets.FACEBOOK_APP_ID }}
      FACEBOOK_CLIENT_TOKEN: ${{ secrets.FACEBOOK_CLIENT_TOKEN }}
      KOCHAVA: ${{ secrets.KOCHAVA }}
      
    runs-on: ubuntu-latest

    steps:
      - name: Verificar Mudança na Versão
        id: check
        run: |
          current_version=$(cat pubspec.yaml | grep 'version:' | awk '{print $2}' | tr -d '\r\n')
          
          # Verifica se houve mudanças na versão
          git diff --exit-code -- pubspec.yaml
          if [ $? -eq 0 ]; then
            echo "Nenhuma mudança na versão do pubspec.yaml."
            exit 0
          fi

          echo "Mudança detectada na versão do pubspec.yaml."
          echo "::set-output name=new_version::$current_version"
        shell: bash

      - name: Usar a Nova Versão
        if: steps.check.outputs.new_version
        run: |
          new_version=${{ steps.check.outputs.new_version }}
          echo "Nova versão do pubspec.yaml: $new_version"

      - name: Criando Tag
        run: |
          NEW_VERSION=$(grep 'version:' pubspec.yaml | cut -d ' ' -f 2 | cut -d '+' -f 1)
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          FLUTTER_VERSION_CODE=$(echo $NEW_VERSION | awk -F. '{print $1$2$3}')

          sed -i "s/versionCode .*/versionCode $FLUTTER_VERSION_CODE/" android/app/build.gradle
          sed -i "s/versionName \".*\"/versionName \"$NEW_VERSION\"/" android/app/build.gradle

          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "paulo@ldcapps.com"
          git add android/app/build.gradle
          git commit -m "Release $NEW_VERSION"
          git tag $NEW_VERSION
          git push origin $NEW_VERSION